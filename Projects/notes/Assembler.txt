// 此文件用于记录 Assembler 设计过程

构建无符号编译器 -> 扩展成完整编译器

无符号汇编编译器：
    1.分析器（Parser）: 分析输入指令，将其分解为字段
    2.Code模块: 将字段翻译为二进制代码
    3.Hack汇编器程序：驱动整个翻译过程

    指令 -> Parser: 解析字段 -> Code: 翻译二进制代码

    Parser:
        1.预处理: 提取完整的指令（即去除注释，空格等）
        2.分类：
            (1)A指令类型: @15 
                    提取@后的十进制
            (2)C指令类型: D = 1
                分别提取 dest, comp, jump 片段
                C-指令的三种格式
                    格式1: dest=comp
                    格式2: comp;jump
                    格式3: dest=comp;jump
            (3)L标签定义类型: (LOOP)
        3.拆解
            拆解指令中的片段

完整Hack汇编器:
    1.在无符号汇编器的基础上增加 符号表

    2.工作过程：
        (1) 初始化
            创建符号表
        (2) 第一趟扫描
        (3) 第二趟扫描

    